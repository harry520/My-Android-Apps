package com.example.drupalappdemo;

import org.apache.http.client.CookieStore;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.protocol.ClientContext;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.cookie.BasicClientCookie;
import org.apache.http.message.BasicHeader;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HTTP;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;

public class AddArticleActivity extends Activity {

	public String session_name;
	public String session_id;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_add_article);
	}

	// asynchronous task to add the article into Drupal
	private class addArticleTask extends AsyncTask<String, Void, Integer> {

		protected Integer doInBackground(String... params) {
			// read session_name and session_id from passed parameters
			String session_name = params[0];
			String session_id = params[1];
			HttpClient httpclient = new DefaultHttpClient();
			HttpPost httppost = new HttpPost("http://ec2-54-244-72-198.us-west-2.compute.amazonaws.com/cmac/rest/node");
			try {
				// get title and body UI elements
				TextView txtTitle = (TextView) findViewById(R.id.editTitle);
				TextView txtBody = (TextView) findViewById(R.id.editBody);
				// extract text from UI elements and remove extra spaces
				String title = txtTitle.getText().toString().trim();
				String body = txtBody.getText().toString().trim();
				// add raw json to be sent along with the HTTP POST request
				StringEntity se = new StringEntity(" { \"title\":\"" + title
						+ "\",\"type\":\"article\",\"body\":{\"und\":[{ \"value\":\"" + body + "\"}]}}");
				se.setContentType(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));
				httppost.setEntity(se);
				BasicHttpContext mHttpContext = new BasicHttpContext();
				CookieStore mCookieStore = new BasicCookieStore();
				// create the session cookie
				BasicClientCookie cookie = new BasicClientCookie(session_name, session_id);
				cookie.setVersion(0);
				cookie.setDomain(".ec2-54-244-72-198.us-west-2.compute.amazonaws.com");
				cookie.setPath("/");
				mCookieStore.addCookie(cookie);
				cookie = new BasicClientCookie("has_js", "1");
				mCookieStore.addCookie(cookie);
				mHttpContext.setAttribute(ClientContext.COOKIE_STORE, mCookieStore);
				httpclient.execute(httppost, mHttpContext);
				return 0;
			} catch (Exception e) {
				Log.v("Error adding article", e.getMessage());
			}
			return 0;
		}

		protected void onPostExecute(Integer result) {
			// start the List Activity and pass back the session_id and
			// session_name
			Intent intent = new Intent(AddArticleActivity.this, ListActivity.class);
			intent.putExtra("SESSION_ID", session_id);
			intent.putExtra("SESSION_NAME", session_name);
			startActivity(intent);
			// stop the current activity
			finish();
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.add_article, menu);
		return true;
	}

}
